# Copyright 2022 PayPal Inc.
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ARG BASE_IMAGE

FROM redislabs/redistimeseries AS redistimeseries

FROM ${BASE_IMAGE}
ARG BASE_IMAGE
# prepare the image with required software
RUN apt update
RUN apt install python3 -y
RUN apt install curl -y
RUN curl --insecure "https://bootstrap.pypa.io/get-pip.py" -o get-pip.py
RUN apt-get install python3-distutils -y
RUN apt-get install python3-apt -y
RUN python3 get-pip.py --trusted-host=files.pythonhosted.org --trusted-host=pypi.org
RUN pip install redis --trusted-host=files.pythonhosted.org --trusted-host=pypi.org
RUN apt install -y iproute2
RUN apt install dnsutils -y
RUN apt install default-jdk -y

# only for debugging
RUN apt-get install procps -y
RUN apt-get install vim -y
RUN apt install iputils-ping -y

# prepare the directory structure as required
RUN mkdir -p /opt
RUN mkdir -p /usr/local/openresty/nginx/lua_files/tests
RUN mkdir -p /usr/local/local_server
RUN mkdir -p /tmp/certs
RUN mkdir -p /usr/lib/redis/modules
RUN mkdir -p /usr/local/bin/

COPY --from=redistimeseries /usr/lib/redis/modules/redistimeseries.so /usr/lib/redis/modules
COPY --from=redistimeseries /usr/local/bin/redis* /usr/local/bin/

# copy all the files needed
COPY ./lua_files/ /usr/local/openresty/nginx/lua_files
COPY ./lua_files/tests /usr/local/openresty/nginx/lua_files/tests
COPY ./nginx_config/ecv.conf /etc/nginx/conf.d/
COPY ./nginx_config/hera_mock.conf /etc/nginx/conf.d/
COPY ./nginx_config/nginx.conf /usr/local/openresty/nginx/conf/nginx.conf
COPY ./nginx_config/mock_response.txt /usr/local/openresty/nginx/conf/mock_response.txt

COPY ./nginx_config/server_ip.txt /tmp/server_ip.txt
RUN if [ ! -f "/usr/local/openresty/nginx/conf/server_ip.txt" ]; then cp /tmp/server_ip.txt /usr/local/openresty/nginx/conf/; fi;
COPY ./certs/ /tmp/certs
RUN if [ ! -f "/usr/local/openresty/nginx/certs/server.crt" ]; then mkdir -p /usr/local/openresty/nginx/certs/ && cp /tmp/certs/* /usr/local/openresty/nginx/certs/; fi;
COPY ./nginx_config/port_map.txt /tmp/
RUN if [ ! -f "/usr/local/openresty/nginx/conf/port_map.txt" ]; then cp /tmp/port_map.txt /usr/local/openresty/nginx/conf/; fi;

COPY ./scripts/local_server.py /usr/local/local_server
COPY ./scripts/SQLHashGen.java /opt/
COPY ./scripts/hera_mock_start.sh /usr/local/openresty/nginx/sbin/hera_mock_start.sh
COPY ./scripts/heartbeat.sh /usr/local/openresty/nginx/sbin/heartbeat.sh
COPY mockClient/java/target/heramockclient-*-jar-with-dependencies.jar /opt/heramockclient-jar-with-dependencies.jar

# update permissions as required
RUN touch /usr/local/openresty/nginx/logs/stream_error.log
RUN chmod -R 777 /usr/local/openresty/nginx/logs/
RUN chmod 777 /usr/local/openresty/nginx/conf/server_ip.txt
RUN chmod 755 /usr/local/openresty/nginx/sbin/hera_mock_start.sh
RUN chmod 755 /usr/local/openresty/nginx/sbin/heartbeat.sh
RUN chmod 755 /usr/local/openresty/nginx/certs/ -R

# ready the environment
RUN cd /opt/ && javac SQLHashGen.java

# entry point
CMD ["/usr/local/openresty/nginx/sbin/hera_mock_start.sh"]
