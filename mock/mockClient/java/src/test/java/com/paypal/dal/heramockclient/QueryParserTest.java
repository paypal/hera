package com.paypal.dal.heramockclient;

import com.paypal.dal.parser.QueryParser;
import org.junit.Test;

public class QueryParserTest {
    @Test
    public void testBasicRequestRead() throws Exception{
        QueryParser queryParser = new QueryParser();
        String sql = "SELECT /* BulkProviderDAOMap.LOAD_BULK_SEQUENCE.-2 */ A.dbid , ppid_64_seq.NEXTVAL FROM ID_DBID A, WMULTIPLE_SEQ_VALUES_ANCHOR WHERE ROWNUM<= :p1";
        String mock = "HERAMOCK_OBJECT_MOCK_META DBID_START_HERA_MOCK 6:3 DBID,3:3 2,3:3 0,3:3 0,5:3 129,DBID_END_HERA_MOCK NEXT_VAL_START_HERA_MOCK 10:3 NEXT_VAL,3:3 2,3:3 0,3:3 0,5:3 129,NEXT_VAL_END_HERA_MOCK ROW_NUM_START_HERA_MOCK 9:3 ROW_NUM,3:3 2,3:3 0,3:3 0,5:3 129,ROW_NUM_END_HERA_MOCK SEQ_ID_START_HERA_MOCK 8:3 SEQ_ID,3:3 2,3:3 0,3:3 0,5:3 129,SEQ_ID_END_HERA_MOCK  NEXT_NEWSTRING DBID_START_HERA_MOCK 100 DBID_END_HERA_MOCK NEXT_VAL_START_HERA_MOCK 101 NEXT_VAL_END_HERA_MOCK ROW_NUM_START_HERA_MOCK 103 ROW_NUM_END_HERA_MOCK SEQ_ID_START_HERA_MOCK 102 SEQ_ID_END_HERA_MOCK  NEXT_NEWSTRING ,";
        System.out.println(QueryParser.getMockRowsForQuery(sql, mock, false));
        sql = "SELECT /* BulkProviderDAOMap.LOAD_BULK_SEQUENCE.-2 */ A.dbid , ppid_64_seq.NEXTVAL FROM ID_DBID A, WMULTIPLE_SEQ_VALUES_ANCHOR WHERE ROWNUM<= :p1";
        mock = "HERAMOCK_OBJECT_MOCK_META DBID_START_HERA_MOCK 6:3 DBID,3:3 2,3:3 0,3:3 0,5:3 129,DBID_END_HERA_MOCK NEXT_VAL_START_HERA_MOCK 10:3 NEXT_VAL,3:3 2,3:3 0,3:3 0,5:3 129,NEXT_VAL_END_HERA_MOCK ROW_NUM_START_HERA_MOCK 9:3 ROW_NUM,3:3 2,3:3 0,3:3 0,5:3 129,ROW_NUM_END_HERA_MOCK SEQ_ID_START_HERA_MOCK 8:3 SEQ_ID,3:3 2,3:3 0,3:3 0,5:3 129,SEQ_ID_END_HERA_MOCK  NEXT_NEWSTRING DBID_START_HERA_MOCK 100 DBID_END_HERA_MOCK NEXT_VAL_START_HERA_MOCK 101 NEXT_VAL_END_HERA_MOCK ROW_NUM_START_HERA_MOCK 103 ROW_NUM_END_HERA_MOCK SEQ_ID_START_HERA_MOCK 102 SEQ_ID_END_HERA_MOCK  NEXT_NEWSTRING ,";
        System.out.println(QueryParser.getMockMetaForQuery(sql, mock));
    }

    @Test
    public void dummy() throws Exception{
        String sql = "SELECT /* WComplianceTransactionMap.GETTXNBYPAYMENTIDCHECKTYPE.-2 */ W.ADJUDICATION_STATUS_CODE, W.CHECK_TYPE, W.TRANSACTION_STATUS_CODE, W.ADJUDICATION_ACTOR_INFO_CODE, W.CHECKPOINT, W.PAYMENT_ID_P20, W.PLANNING_ID, W.SCAN_ACTOR_INFO_CODE, W.CHECK_ID, W.PAYMENT_ID, W.RECEIVER_ACCOUNT_NUMBER, W.RECEIVER_TRANSACTION_ID, W.SENDER_ACCOUNT_NUMBER, W.SENDER_TRANSACTION_ID, W.FLAGS, W.ID, W.PAYMENT_FLOW_ID, W.TIME_CREATED, W.TIME_UPDATED FROM WCOMPLIANCE_TRANSACTION W WHERE W.PAYMENT_ID = :payment_id AND W.CHECK_TYPE = :check_type AND ((1 = 1))";

        String mock = "HERAMOCK_OBJECT_MOCK_META END_TIME_START_HERA_MOCK 10:3 END_TIME,3:3 2,3:3 0,3:3 0,5:3 129,END_TIME_END_HERA_MOCK START_TIME_START_HERA_MOCK 12:3 START_TIME,3:3 2,3:3 0,3:3 0,5:3 129,START_TIME_END_HERA_MOCK FLAGS_START_HERA_MOCK 7:3 FLAGS,3:3 2,3:3 0,3:3 0,5:3 129,FLAGS_END_HERA_MOCK PAYMENT_FLOW_ID_START_HERA_MOCK 17:3 PAYMENT_FLOW_ID,3:3 2,3:3 0,3:3 0,5:3 129,PAYMENT_FLOW_ID_END_HERA_MOCK CHECKPOINT_START_HERA_MOCK 12:3 CHECKPOINT,3:3 1,3:3 8,3:3 0,3:3 0,CHECKPOINT_END_HERA_MOCK PLANNING_ID_START_HERA_MOCK 13:3 PLANNING_ID,3:3 1,3:3 8,3:3 0,3:3 0,PLANNING_ID_END_HERA_MOCK PAYMENT_ID_P20_START_HERA_MOCK 16:3 PAYMENT_ID_P20,3:3 1,3:3 8,3:3 0,3:3 0,PAYMENT_ID_P20_END_HERA_MOCK TIME_UPDATED_START_HERA_MOCK 14:3 TIME_UPDATED,3:3 2,3:3 0,3:3 0,5:3 129,TIME_UPDATED_END_HERA_MOCK TIME_CREATED_START_HERA_MOCK 14:3 TIME_CREATED,3:3 2,3:3 0,3:3 0,5:3 129,TIME_CREATED_END_HERA_MOCK ADJUDICATION_STATUS_CODE_START_HERA_MOCK 26:3 ADJUDICATION_STATUS_CODE,3:3 1,3:3 8,3:3 0,3:3 0,ADJUDICATION_STATUS_CODE_END_HERA_MOCK ADJUDICATION_ACTOR_INFO_CODE_START_HERA_MOCK 30:3 ADJUDICATION_ACTOR_INFO_CODE,3:3 1,3:3 8,3:3 0,3:3 0,ADJUDICATION_ACTOR_INFO_CODE_END_HERA_MOCK SCAN_ACTOR_INFO_CODE_START_HERA_MOCK 22:3 SCAN_ACTOR_INFO_CODE,3:3 1,3:3 8,3:3 0,3:3 0,SCAN_ACTOR_INFO_CODE_END_HERA_MOCK TRANSACTION_STATUS_CODE_START_HERA_MOCK 25:3 TRANSACTION_STATUS_CODE,3:3 1,3:3 8,3:3 0,3:3 0,TRANSACTION_STATUS_CODE_END_HERA_MOCK CHECK_ID_START_HERA_MOCK 10:3 CHECK_ID,3:3 2,3:3 0,3:3 0,5:3 129,CHECK_ID_END_HERA_MOCK CHECK_TYPE_START_HERA_MOCK 12:3 CHECK_TYPE,3:3 1,3:3 8,3:3 0,3:3 0,CHECK_TYPE_END_HERA_MOCK SENDER_ACCOUNT_NUMBER_START_HERA_MOCK 23:3 SENDER_ACCOUNT_NUMBER,3:3 2,3:3 0,3:3 0,5:3 129,SENDER_ACCOUNT_NUMBER_END_HERA_MOCK RECEIVER_ACCOUNT_NUMBER_START_HERA_MOCK 25:3 RECEIVER_ACCOUNT_NUMBER,3:3 2,3:3 0,3:3 0,5:3 129,RECEIVER_ACCOUNT_NUMBER_END_HERA_MOCK SENDER_TRANSACTION_ID_START_HERA_MOCK 23:3 SENDER_TRANSACTION_ID,3:3 2,3:3 0,3:3 0,5:3 129,SENDER_TRANSACTION_ID_END_HERA_MOCK RECEIVER_TRANSACTION_ID_START_HERA_MOCK 25:3 RECEIVER_TRANSACTION_ID,3:3 2,3:3 0,3:3 0,5:3 129,RECEIVER_TRANSACTION_ID_END_HERA_MOCK PAYMENT_ID_START_HERA_MOCK 12:3 PAYMENT_ID,3:3 2,3:3 0,3:3 0,5:3 129,PAYMENT_ID_END_HERA_MOCK ID_START_HERA_MOCK 4:3 ID,3:3 2,3:3 0,3:3 0,5:3 129,ID_END_HERA_MOCK  NEXT_NEWSTRING END_TIME_START_HERA_MOCK 0 END_TIME_END_HERA_MOCK START_TIME_START_HERA_MOCK 0 START_TIME_END_HERA_MOCK FLAGS_START_HERA_MOCK 0 FLAGS_END_HERA_MOCK PAYMENT_FLOW_ID_START_HERA_MOCK 0 PAYMENT_FLOW_ID_END_HERA_MOCK TIME_UPDATED_START_HERA_MOCK 0 TIME_UPDATED_END_HERA_MOCK TIME_CREATED_START_HERA_MOCK 0 TIME_CREATED_END_HERA_MOCK ADJUDICATION_STATUS_CODE_START_HERA_MOCK R ADJUDICATION_STATUS_CODE_END_HERA_MOCK ID_START_HERA_MOCK 0 ID_END_HERA_MOCK  NEXT_NEWSTRING ,";
        String resp = QueryParser.getMockMetaForQuery(sql, mock);
        for(String r : resp.split(" NEXT_NEWSTRING "))
            System.out.println(r);
    }

}
