# github.com/paypal/hera/tests/unittest/postgres_failover
./main_test.go the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak
	}
	
	func commit(conn *sql.Conn, t* testing.T) {
		ctx, _ := context.WithTimeout(context.Background(), 10*time.Second)
		tx, err := conn.BeginTx(ctx, nil)
		if err != nil {
			t.Fatalf("Error begin tx %s\n", err.Error())
./main_test.go the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak
	}
	
	func rollback(conn *sql.Conn, t* testing.T) {
		ctx, _ := context.WithTimeout(context.Background(), 10*time.Second)
		tx, err := conn.BeginTx(ctx, nil)
		if err != nil {
			t.Fatalf("Error begin tx %s\n", err.Error())
./main_test.go the cancel function returned by context.WithTimeout should be called, not discarded, to avoid a context leak
	
	func doCrud(conn *sql.Conn, id int, t* testing.T) (bool) {
	
		ctx, _ := context.WithTimeout(context.Background(), 10*time.Second)
	
		stmt, err := conn.PrepareContext(ctx, "drop table test_failover")
		if err != nil {
